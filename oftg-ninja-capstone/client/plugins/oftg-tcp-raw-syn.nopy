__author__ = 'ryan.ohoro'

import socket
from oftgplugin import *

import re
import random
import binascii


class TCPRawSYN(OFTGPacketPlugin):

    INFO = {
        'Title': 'TCP Raw SYN Data Payload',
        'Usage': '',
        'Author': 'Ryan O\'Horo'
    }

    PROPERTIES = {'portspec':
                  {'Label': 'TCP Ports',
                   'Default': '1-65535',
                   'Sample': '23,25,137-139',
                   'Type': 'string',
                   'Value': None},
                  'portrandomize':
                  {'Label': 'Randomize Ports',
                   'Default': True,
                   'Type': 'boolean',
                   'Value': None}
    }

    # TODO: Calculate total tasks for progress reporting

    def emitter(self):

        try:
            if self.PROPERTIES['portspec']['Value']:
                ports = hyphen_range(self.PROPERTIES['portspec']['Value'])
            else:
                print 'Error in %s: No property portspec' % (__name__)
                return None

            if self.PROPERTIES['portrandomize']['Value'] == True:
                random.shuffle(ports)

            for port in ports:
                print "UDPRaw Target:", self.target, port
                sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
                sock.sendto(self.payload, (self.target, port))
                sock.close()
        except KeyboardInterrupt:
            return None
        except:
            raise

        return None

    def collector(self, packet):

        #print 'UDPRaw Analyzed: %s' % packet

        if re.search('.*OFTG.*', packet):
            print 'Collector matched packet: %s' % binascii.hexlify(packet)

        return None



